# This is a workflow template for a workflow which looks up a collection of resources (i.e., pods)
# and for each of them stores the output in an artifact repository.
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: inspection-results-template
  annotations:
    thoth-station.ninja/template-version: 0.6.0
spec:
  templates:
  - name: main
    inputs:
      parameters:
      # Required
      - name: inspection-id
      - name: volume
      # Default
      - name: namespace
        value: "{{workflow.namespace}}"
      - name: kind
        value: pods
      - name: selector
        value: ""
      - name: registry
        value: docker-registry.default.svc:5000
      - name: thoth-infra-namespace
        value: "{{workflow.namespace}}"
      - name: dockerfile
      - name: specification
      # Exit
      - name: exit
        value: "false"
    outputs:
      artifacts:
      - name: output
        path: "/mnt/output/{{inputs.parameters.inspection-id}}"
        archive:
          none: {}
    script:
      image: |-
        {{inputs.parameters.registry}}/{{inputs.parameters.thoth-infra-namespace}}/kubectl
      imagePullPolicy: Always
      command: [bash]
      source: |-
        set -euxo pipefail

        resource_names=$(\
          kubectl get {{inputs.parameters.kind}}        \
            --namespace {{inputs.parameters.namespace}} \
            --selector {{inputs.parameters.selector}}   \
            --output json |\
          jq -r '.items[].metadata.name' \
        )

        results=/mnt/output/{{inputs.parameters.inspection-id}} ; mkdir -p "$results"

        {
          cnt=0
          IFS=$'\n' ; for name in $resource_names; do
            let "cnt+=1";
            kubectl logs $name > "${results}/${cnt}-output"
          done
        }

        if [ "true" == "{{inputs.parameters.exit}}" ]; then
          >&2 echo "Workflow failure in the previous steps. Exitting."
          exit 1
        fi

        cat <<EOF | jq . >"${results}/Dockerfile"
        {{inputs.parameters.dockerfile}}
        EOF

        cat <<EOF >"${results}/specification"
        {{inputs.parameters.specification}}
        EOF

      resources:
        limits:
          cpu: 500m
          memory: 256Mi
      # Required so that `kubelet/k8sapi` executors could gather outputs
      # NOTE: The volume has to be created by the caller's workflow, since
      # WorkflowTemplateSpec does not allow to specify volumes
      # see https://github.com/argoproj/argo/blob/master/pkg/apis/workflow/v1alpha1/workflow_template_types.go
      volumeMounts:
      - name: "{{inputs.parameters.volume}}"
        mountPath: /mnt/output
